plugins {
    id 'java'
    id 'io.qameta.allure' version '2.11.2'
}

group = 'guru.qa'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

def selenideVersion = "6.16.0",
    allureVersion = "2.23.0"

allure {
    report {
        version.set(allureVersion)
    }
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set(allureVersion)
            }
        }
    }
}

dependencies {
    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation(
            'org.junit.jupiter:junit-jupiter',
            "com.codeborne:selenide:$selenideVersion",
            "io.qameta.allure:allure-selenide:$allureVersion",
            'org.slf4j:slf4j-simple:2.0.7',
            'org.aeonbits.owner:owner:1.0.12'
    )
}

tasks.withType(Test) {
    useJUnitPlatform()
    systemProperties(System.getProperties())

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

compileJava {
    options.encoding = 'UTF-8'
}
compileTestJava {
    options.encoding = 'UTF-8'
}

test {
    useJUnitPlatform()
}

task favorite_test(type: Test) {
    useJUnitPlatform{
        includeTags("favorite")
    }
}

task cart_test(type: Test) {
    useJUnitPlatform{
        includeTags("cart")
    }
}

task removeFromCart_test(type: Test) {
    useJUnitPlatform{
        includeTags("removeFromCart")
    }
}

task parametrized_test(type: Test) {
    useJUnitPlatform{
        includeTags("parametrized")
    }
}